if params[0] == "-h" or params[0] == "--help" then
    exit("<b>Usage: " + program_path.split("/")[-1] + " [ip_address] [port] Gives shell. [ip_address] dumps passwd file contents</b>")
end if

metaxploit = include_lib("/lib/metaxploit.so")
if not metaxploit then
    metaxploit = include_lib(current_path + "/metaxploit.so")
end if
if not metaxploit then
    exit("Error: Can't find metaxploit library in the /lib path or the current folder")
end if

address = params[0]
if params.len == 1 then
    net_session = metaxploit.net_use(address)
    if not net_session then
        exit("Error: can't connect to net session")
    end if

    metaLib = net_session.dump_lib
    result = metaLib.overflow("0x1B111C14", "revstrmdatap")
    if not result then
        exit("Program ended")
    end if

    if typeof(result) != "file" then
        exit("Error: expected file, obtained: " + result)
    end if

    if not result.is_folder then
        exit("Error: expected folder, obtained file: " + result.path)
    end if

    if not result.has_permission("r") then
        exit("Error: can't access to " + result.path + ". Permission denied.")
    end if

AccessPasswdFile = function(result)
	print("Accesing to password file...")
	files = result.get_files
	for file in files
		if file.name == "passwd" then
			if not file.has_permission("r") then exit("failed. Can't access to file contents. Permission denied")
			exit("success! loading content...\n" + file.get_content)
		end if
	end for
	exit("Error: /etc/passwd file not found. Program aborted");
end function

if result.path == "/etc" then
	AccessPasswdFile(result)

else 
	print("Attempting to reach /etc folder...")
	while result.path != "/"
		result = result.parent
	end while
	folders = result.get_folders
	for folder in folders
		if folder.path == "/etc" then
			AccessPasswdFile(folder)
		end if
	end for
end if
end if

if params.len == 2 then
    port = params[1].to_int
    net_session = metaxploit.net_use(address, port)
    if not net_session then
        exit("Error: can't connect to net session")
    end if

    metaLib = net_session.dump_lib
    result = metaLib.overflow("0x14DC7484", "slinesourcethi")
    if not result then
        exit("Program ended")
    end if

    if typeof(result) == "shell" then
        result.start_terminal
    else
        print("Error: expected shell, obtained: " + result)
    end if
end if